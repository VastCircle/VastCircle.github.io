<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vector on VastCircle's blog</title><link>https://VastCircle.github.io/tags/vector/</link><description>Recent content in Vector on VastCircle's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 18 Dec 2024 17:03:41 +0800</lastBuildDate><atom:link href="https://VastCircle.github.io/tags/vector/index.xml" rel="self" type="application/rss+xml"/><item><title>SIMD和Vector</title><link>https://VastCircle.github.io/2024/simd/</link><pubDate>Wed, 18 Dec 2024 17:03:41 +0800</pubDate><guid>https://VastCircle.github.io/2024/simd/</guid><description>&lt;h2 id="simd技术简介">SIMD技术简介&lt;/h2>
&lt;p>&lt;strong>传统的通用处理器都是标量处理器，一条指令执行只得到一个数据结果&lt;/strong>。但对于图像、信号处理等应用，存在大量的数据并行性计算操作，这个时候，提高数据的并行性从而提高运算的性能就显得尤为重要。因此，SIMD技术应运而生。&lt;/p></description></item><item><title>Vector_runahead</title><link>https://VastCircle.github.io/2024/vector_runahead/</link><pubDate>Tue, 17 Dec 2024 14:50:55 +0800</pubDate><guid>https://VastCircle.github.io/2024/vector_runahead/</guid><description>&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>内存墙对许多现代工作负载的性能造成了重大限制。这些应用程序具有复杂的依赖间接内存访问链，即使是最先进的微架构预取器也无法获取。结果是，当前无序超标量处理器的大部分时间都处于停滞状态。但是，为了实现高内存级别的并行性，标准的提前执行会在缓存未命中之前跳过。在现代工作负载中，这意味着它只预取每个依赖链中的第一个缺少缓存的负载。我们认为，这不是一个根本的限制。如果 runahead 是在 cache 未命中时停止以生成依赖链负载，那么如果它可以同时在多个 cache 上停止，则可以重新获得性能。&lt;/p></description></item><item><title>Decoupled_Vector_Runahead</title><link>https://VastCircle.github.io/2024/decoupled_vector_runahead/</link><pubDate>Tue, 17 Dec 2024 12:28:27 +0800</pubDate><guid>https://VastCircle.github.io/2024/decoupled_vector_runahead/</guid><description>&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>我们提出了解耦矢量预取 （DVR），这是一种内核内预取技术，与主应用程序线程分开执行，它利用大量内存级并行性来提高具有间接内存访问功能的应用程序的性能。DVR 在运行时动态推断循环边界，识别跨步负载，并矢量化作为间接链一部分的后续指令。它会主动为将来的负载发出内存访问，即使无序内核尚未停止，也会将其数据带入 L1 缓存，从而为主线程提供及时的预取。DVR 可以在运行时调整矢量化程度，在内部循环的多次调用中对同一间接内存访问链进行矢量化，并有效地处理沿矢量化链的分支发散。DVR 作为按需、推测性、按顺序、轻量级硬件子线程与内核内的主线程一起运行，并且产生的最小硬件开销仅为 1139 字节。相对于大型超标量 5 宽无序基线和 Vector Runahead（一种用于加速乱序处理器上的间接内存访问的最新微架构技术），DVR 为一组图形分析、数据库和 HPC 工作负载提供了 2.4× 和 2× 的性能。&lt;/p></description></item></channel></rss>