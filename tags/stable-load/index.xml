<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stable Load on VastCircle's blog</title><link>https://VastCircle.github.io/tags/stable-load/</link><description>Recent content in Stable Load on VastCircle's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 16 Feb 2025 23:45:47 +0800</lastBuildDate><atom:link href="https://VastCircle.github.io/tags/stable-load/index.xml" rel="self" type="application/rss+xml"/><item><title>Constable_improving_performance_and_power__execution</title><link>https://VastCircle.github.io/2025/constable_improving_performance_and_power__execution/</link><pubDate>Sun, 16 Feb 2025 23:45:47 +0800</pubDate><guid>https://VastCircle.github.io/2025/constable_improving_performance_and_power__execution/</guid><description>&lt;p>我们在这项工作中的目标是通过减轻负载数据依赖性和资源依赖性来改善ILP。为此，我们提出了一种称为Constable的纯粹微体系技术，可以安全地消除执行负载指令。 Constable动态标识了从同一负载地址反复获取相同数据的负载指令。我们称这种负载可能稳定。对于每个可能稳定的负载，Constable（1）通过轻巧的硬件结构跟踪对其源体系结构寄存器和内存位置进行修改，并且（2）消除执行加载指令的后续实例，直到将其写入其源寄存器或其源寄存器或商店或Snoop请求到其加载地址。&lt;/p></description></item></channel></rss>