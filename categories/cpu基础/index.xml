<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cpu基础 on VastCircle's blog</title><link>https://VastCircle.github.io/categories/cpu%E5%9F%BA%E7%A1%80/</link><description>Recent content in Cpu基础 on VastCircle's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 18 Dec 2024 17:03:41 +0800</lastBuildDate><atom:link href="https://VastCircle.github.io/categories/cpu%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml"/><item><title>SIMD和Vector</title><link>https://VastCircle.github.io/2024/simd/</link><pubDate>Wed, 18 Dec 2024 17:03:41 +0800</pubDate><guid>https://VastCircle.github.io/2024/simd/</guid><description>&lt;h2 id="simd技术简介">SIMD技术简介&lt;/h2>
&lt;p>&lt;strong>传统的通用处理器都是标量处理器，一条指令执行只得到一个数据结果&lt;/strong>。但对于图像、信号处理等应用，存在大量的数据并行性计算操作，这个时候，提高数据的并行性从而提高运算的性能就显得尤为重要。因此，SIMD技术应运而生。&lt;/p></description></item><item><title>乱序执行CPU</title><link>https://VastCircle.github.io/2024/%E4%B9%B1%E5%BA%8F%E6%89%A7%E8%A1%8Ccpu/</link><pubDate>Sat, 12 Oct 2024 16:08:08 +0800</pubDate><guid>https://VastCircle.github.io/2024/%E4%B9%B1%E5%BA%8F%E6%89%A7%E8%A1%8Ccpu/</guid><description>&lt;h2 id="tomasulos-algorithm">Tomasulo&amp;rsquo;s algorithm&lt;/h2>
&lt;h3 id="tomasulos-algorithm创新">Tomasulo‘s algorithm创新&lt;/h3>
&lt;p>Tomasulo算法的主要创新包括硬件实现的寄存器重命名、为所有执行单元设计的保留站（reservation stations），以及一个公共数据总线（CDB），通过该总线计算出的值可以广播到所有可能需要它们的保留站。这些创新使得指令能够实现更好的并行执行，避免在使用记分板或其他早期算法时可能导致的停滞.&lt;/p></description></item></channel></rss>